## path ==>>>>>>>>> /etc/nginx/sites-available/defaul

server {
	listen 80 default_server;
	listen [::]:80 default_server;

	root /var/www/html;
	index index.html index.htm index.nginx-debian.html;
  server_name _;
        
  # Block direct IP access to Nginx web server
  if ( $host != "api.example.com" ){
    return 444; #CONNECTION CLOSED WITHOUT RESPONSE
  }
  return 444; #CONNECTION CLOSED WITHOUT RESPONSE
}

server {

	root /var/www/html;
	index index.html index.htm index.nginx-debian.html;
  server_name api.example.com; # managed by Certbot

	location / {
    proxy_pass http://localhost:8080;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_cache_bypass $http_upgrade;
	}

  listen [::]:443 ssl ipv6only=on; # managed by Certbot
  listen 443 ssl; # managed by Certbot
  ssl_certificate /etc/letsencrypt/live/api.example.com/fullchain.pem; # managed by Certbot
  ssl_certificate_key /etc/letsencrypt/live/api.example.com/privkey.pem; # managed by Certbot
  include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
  ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}

server {

  # managed by Certbot
  if ($host = api.example.com) {
    return 301 https://$host$request_uri;
  }

	listen 80 ;
	listen [::]:80 ;
  server_name api.example.com;
  return 404; # managed by Certbot
}